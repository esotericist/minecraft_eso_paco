# Configuration file

##########################################################################################################
# cities_nodamage
#--------------------------------------------------------------------------------------------------------#
# Settings related to city generation for the nodamage profile
##########################################################################################################

cities_nodamage {
    # The default biome factor which is used if your biome is not specified in 'cityBiomeFactors' [range: 0.0 ~ 1.0, default: 1.0]
    S:cityBiomeFactorDefault=1.0

    # List of biomes with a factor to affect the city factor in that biome. Using the value 0 you can disable city generation in biomes [default: [river=0], [frozen_river=0], [ocean=.7], [frozen_ocean=.7], [deep_ocean=.4]]
    S:cityBiomeFactors <
        river=0
        frozen_river=0
        ocean=.7
        frozen_ocean=.7
        deep_ocean=.4
     >

    # The chance this chunk will be the center of a city [range: 0.0 ~ 1.0, default: 0.02]
    S:cityChance=0.02

    # The maximum radius of a city [range: 1 ~ 10000, default: 128]
    I:cityMaxRadius=128

    # The minimum radius of a city [range: 1 ~ 10000, default: 50]
    I:cityMinRadius=50

    # The center and radius of a city define a sphere. This thresshold indicates from which point a city is considered a city. This is important for calculating where cities are based on overlapping city circles (where the city thressholds are added) [range: 0.0 ~ 1.0, default: 0.2]
    S:cityThresshold=0.2
}


##########################################################################################################
# explosions_nodamage
#--------------------------------------------------------------------------------------------------------#
# Settings related to explosions and damage for the nodamage profile
##########################################################################################################

explosions_nodamage {
    # A factor that determines how much debris will overflow from nearby damaged chunks. Bigger numbers mean less debris [range: 1 ~ 10000, default: 200]
    I:debrisToNearbyChunkFactor=200

    # When a section of blocks in in an explosion the generator will count the number of blocks that are connected. The number of connections divided by the total number of blocks in a connected section is compared with this number. If it is smaller then the section of blocks is destroyed or moved down with gravity [range: 0.0 ~ 1.0, default: 0.05]
    S:destroyLoneBlocksFactor=0.05

    # When a section of blocks is to be moved or destroyed this chance gives the chance of removal (as opposed to moving with gravity) [range: 0.0 ~ 1.0, default: 0.4]
    S:destroyOrMoveChance=0.4

    # A section of blocks that is about to be moved or destroyed is always destroyed if it is smaller then this size [range: 1 ~ 5000, default: 50]
    I:destroySmallSectionsSize=50

    # The chance that a chunk will contain an explosion [range: 0.0 ~ 1.0, default: 0.0]
    S:explosionChance=0.0

    # The maximum height of an explosion [range: 1 ~ 256, default: 90]
    I:explosionMaxHeight=90

    # The maximum radius of an explosion [range: 1 ~ 3000, default: 50]
    I:explosionMaxRadius=50

    # The minimum height of an explosion [range: 1 ~ 256, default: 75]
    I:explosionMinHeight=75

    # The minimum radius of an explosion [range: 1 ~ 1000, default: 17]
    I:explosionMinRadius=17

    # If this is true the center of an explosion can only be in a city (the blast can still affect non-city chunks) [default: true]
    B:explosionsInCitiesOnly=true

    # The chance that a chunk will contain a mini explosion [range: 0.0 ~ 1.0, default: 0.0]
    S:miniExplosionChance=0.0

    # The maximum height of a mini explosion [range: 1 ~ 256, default: 100]
    I:miniExplosionMaxHeight=100

    # The maximum radius of a mini explosion [range: 1 ~ 3000, default: 15]
    I:miniExplosionMaxRadius=15

    # The minimum height of a mini explosion [range: 1 ~ 256, default: 60]
    I:miniExplosionMinHeight=60

    # The minimum radius of a mini explosion [range: 1 ~ 1000, default: 5]
    I:miniExplosionMinRadius=5
}


##########################################################################################################
# lostcity_nodamage
#--------------------------------------------------------------------------------------------------------#
# Settings related to the Lost City for the nodamage profile
##########################################################################################################

lostcity_nodamage {
    # The height of the bedrock layer that is generated at the bottom of some world types. Set to 0 to disable this and get default bedrock generation [range: 0 ~ 10, default: 1]
    I:bedrockLayer=1

    # The chance that a chunk can possibly contain a bridge. There actually being a bridge also depends on the presence of adjacent bridges and other conditions [range: 0.0 ~ 1.0, default: 0.7]
    S:bridgeChance=0.7

    # The chance that a chunk can possibly be the top-left chunk of 2x2 building. There actually being a 2x2 building also depends on the condition of those other chunks [range: 0.0 ~ 1.0, default: 0.03]
    S:building2x2Chance=0.03

    # The chance that a chunk in a city will have a building. Otherwise it will be a street [range: 0.0 ~ 1.0, default: 0.3]
    S:buildingChance=0.3

    # The chance that a doorway will be generated at a side of a building (on any level). Only when possible [range: 0.0 ~ 1.0, default: 0.6]
    S:buildingDoorwayChance=0.6

    # The maximum number of cellars (below ground). 0 means no cellar [range: 0 ~ 7, default: 4]
    I:buildingMaxCellars=4

    # A cap for the amount of floors a city can have (above ground) [range: 0 ~ 30, default: 9]
    I:buildingMaxFloors=9

    # The amount of floors of a building is equal to: MINFLOORS + random(MINFLOORS_CHANCE + (cityFactor + .1f) * (MAXFLOORS_CHANCE - MINFLOORS_CHANCE)) [range: 1 ~ 30, default: 6]
    I:buildingMaxFloorsChance=6

    # The minimum number of cellars (below ground). 0 means no cellar [range: 0 ~ 7, default: 0]
    I:buildingMinCellars=0

    # The minimum number of floors (above ground) for a building (0 means the first floor only) [range: 0 ~ 30, default: 0]
    I:buildingMinFloors=0

    # The amount of floors of a building is equal to: MINFLOORS + random(MINFLOORS_CHANCE + (cityFactor + .1f) * (MAXFLOORS_CHANCE - MINFLOORS_CHANCE)) [range: 1 ~ 30, default: 4]
    I:buildingMinFloorsChance=4

    # The chance that a chunk can possibly contain a corridor. There actually being a corridor also depends on the presence of adjacent corridors [range: 0.0 ~ 1.0, default: 0.7]
    S:corridorChance=0.7

    # The chance that a 2x2 building will be a data center [range: 0.0 ~ 1.0, default: 0.1]
    S:dataCenterChance=0.1

    # The description of this profile [default: Like default but no explosion damage]
    S:description=Like default but no explosion damage

    # The chance that a street section contains a fountain [range: 0.0 ~ 1.0, default: 0.05]
    S:fountainChance=0.05

    # If true then there will be minimal lighting in the buildings [default: false]
    B:generateLigthing=false

    # If true the chests in the buildings will contain loot [default: true]
    B:generateLoot=true

    # If true then the buildings will be full of spawners [default: true]
    B:generateSpawners=true

    # Ground level [range: 2 ~ 256, default: 71]
    I:groundLevel=71

    # The chance that a 2x2 building will be a library [range: 0.0 ~ 1.0, default: 0.1]
    S:libraryChance=0.1

    # Chance that leafblocks will be generated at the border of a building and a street [range: 0.0 ~ 1.0, default: 0.1]
    S:randomLeafBlockChance=0.1

    # The chance that a brick will be cracked [range: 0.0 ~ 1.0, default: 0.06]
    S:styleChanceCracked=0.06

    # The chance that a brick will be mossy [range: 0.0 ~ 1.0, default: 0.05]
    S:styleChanceMossy=0.05

    # The chance that a block on the outside of a building will be covered with a vine [range: 0.0 ~ 1.0, default: 0.009]
    S:vineChance=0.009

    # How much lower the water level is compared to the ground level (63) [range: 1 ~ 30, default: 8]
    I:waterLevelOffset=8

    # The worldstyle used by this profile (defined in the assets) [default: standard]
    S:worldStyle=standard
}


##########################################################################################################
# structures_nodamage
#--------------------------------------------------------------------------------------------------------#
# Settings related to structure generation for the nodamage profile
##########################################################################################################

structures_nodamage {
    # Generate caves
    B:generateCaves=true

    # Generate mineshafts
    B:generateMineshafts=true

    # Generate ocean monuments
    B:generateOceanMonuments=true

    # Generate ravines
    B:generateRavines=true

    # Generate scattered features (swamphunts, desert temples, ...)
    B:generateScattered=true

    # Generate strongholds
    B:generateStrongholds=true

    # Generate villages
    B:generateVillages=true

    # If true then an attempt will be made to prevent villages in cities. Note that enabling this option will likely require a low city density in order to actually get a reasonable chance for villages.
    B:preventVillagesInCities=true
}


